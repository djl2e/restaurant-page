(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),a=t.n(o),r=t(645),i=t.n(r),c=t(667),s=t.n(c),l=new URL(t(510),t.b),A=i()(a()),d=s()(l);A.push([n.id,":root {\n    --black-background: rgba(0, 0, 0, 0.6);\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: beige;\n    background-image: url("+d+");\n    background-repeat: no-repeat;\n}\n\nul {\n    list-style-type: none;\n    text-align: center;\n}\n\nimg {\n    width: 200px;\n    height: auto;\n    border-radius: 10px;\n}\n\n.tabs {\n    position: absolute;\n    top: 10%;\n    left: 4%;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.tabs button {\n    background-color: var(--black-background);\n    font-size: 20px;\n    color: beige;\n    padding: 5px 20px;\n    border-radius: 10px;\n    border: none;\n    transition: all 0.4s;\n}\n\n.tabs button:hover {\n    cursor: pointer;\n    transform: scale(1.2);\n}\n\n#content {\n    width: 50vw;\n    height: 80vh;\n    border-radius: 5px;\n    background-color: var(--black-background);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#content div {\n    width: 40vw;\n}\n\n#content h1 {\n    font-size: 35px;\n    padding-bottom: 10px;\n}\n\n#content h3 {\n    margin: 10px;\n    padding-left: 60px;\n    text-decoration: underline;\n}\n\n.about-us, .hours, .location {\n    display: flex;\n    flex-direction: column;\n}\n\n.about-us, .hours {\n    padding-bottom: 10px;\n}\n\n.about-us p {\n    align-self: center;\n    width: 25vw;\n}\n\n.hours ul {\n    align-self: center;\n    padding-right: 50px;\n}\n\n.hours li {\n    margin: 5px;\n}\n\n.location p {\n    align-self: center;\n}\n\n.menu {\n    display: flex;\n    gap: 30px;\n    margin-bottom: 20px;\n}\n\n#content .menu-left {\n    width: 20vw;\n}\n\n#content .menu-top-left {\n    width: inherit;\n    display: flex;\n    justify-content: space-between;\n    align-self: center;\n\n}\n\n#content .menu-top-left h3 {\n    padding-left: 0;\n}\n\n#content .menu-top-left p {\n    padding-right: 20px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sCAAsC;AAC1C;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,yDAA6C;IAC7C,4BAA4B;AAChC;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,QAAQ;IACR,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,yCAAyC;IACzC,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,yCAAyC;IACzC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,cAAc;IACd,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;;AAEtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:[':root {\n    --black-background: rgba(0, 0, 0, 0.6);\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: beige;\n    background-image: url("./img/stone-wall.jpg");\n    background-repeat: no-repeat;\n}\n\nul {\n    list-style-type: none;\n    text-align: center;\n}\n\nimg {\n    width: 200px;\n    height: auto;\n    border-radius: 10px;\n}\n\n.tabs {\n    position: absolute;\n    top: 10%;\n    left: 4%;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.tabs button {\n    background-color: var(--black-background);\n    font-size: 20px;\n    color: beige;\n    padding: 5px 20px;\n    border-radius: 10px;\n    border: none;\n    transition: all 0.4s;\n}\n\n.tabs button:hover {\n    cursor: pointer;\n    transform: scale(1.2);\n}\n\n#content {\n    width: 50vw;\n    height: 80vh;\n    border-radius: 5px;\n    background-color: var(--black-background);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#content div {\n    width: 40vw;\n}\n\n#content h1 {\n    font-size: 35px;\n    padding-bottom: 10px;\n}\n\n#content h3 {\n    margin: 10px;\n    padding-left: 60px;\n    text-decoration: underline;\n}\n\n.about-us, .hours, .location {\n    display: flex;\n    flex-direction: column;\n}\n\n.about-us, .hours {\n    padding-bottom: 10px;\n}\n\n.about-us p {\n    align-self: center;\n    width: 25vw;\n}\n\n.hours ul {\n    align-self: center;\n    padding-right: 50px;\n}\n\n.hours li {\n    margin: 5px;\n}\n\n.location p {\n    align-self: center;\n}\n\n.menu {\n    display: flex;\n    gap: 30px;\n    margin-bottom: 20px;\n}\n\n#content .menu-left {\n    width: 20vw;\n}\n\n#content .menu-top-left {\n    width: inherit;\n    display: flex;\n    justify-content: space-between;\n    align-self: center;\n\n}\n\n#content .menu-top-left h3 {\n    padding-left: 0;\n}\n\n#content .menu-top-left p {\n    padding-right: 20px;\n}'],sourceRoot:""}]);const p=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);o&&i[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],c=0;c<n.length;c++){var s=n[c],l=o.base?s[0]+o.base:s[0],A=r[l]||0,d="".concat(l," ").concat(A);r[l]=A+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=c,e.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var c=t(r[i]);e[c].references--}for(var s=o(n,a),l=0;l<r.length;l++){var A=t(r[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},661:(n,e,t)=>{n.exports=t.p+"eec3d12c58c706d41a5e.jpg"},61:(n,e,t)=>{n.exports=t.p+"38d3128f019c388c9a51.jpg"},202:(n,e,t)=>{n.exports=t.p+"be1e035cac556be6560c.jpg"},510:(n,e,t)=>{n.exports=t.p+"d261370f9716e9723721.jpg"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),i=t.n(r),c=t(565),s=t.n(c),l=t(216),A=t.n(l),d=t(589),p=t.n(d),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=A(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const h={Monday:"9am - 6pm",Tuesday:"9am - 6pm",Wednesday:"9am - 6pm",Thursday:"9am - 6pm",Friday:"10am - 5pm",Saturday:"10am - 3pm"},f=function(){const n=document.querySelector("#content"),e=document.createElement("h1");e.textContent="Lee's Kimchi Market";const t=document.createElement("div"),o=document.createElement("h3"),a=document.createElement("p");t.classList.add("about-us"),o.textContent="About Us",a.textContent='Lee\'s Kimchi Market aims to serve the authentic Korean taste to customers all around the globe.         Our recipe has been passed on for 4 generations and has not been changed ever since our founder, Ki Lee, opened the store over a century ago.         Take a look at our products and try our samples to discover your "Kimchi palate".',t.appendChild(o),t.appendChild(a);const r=document.createElement("div"),i=document.createElement("h3"),c=document.createElement("ul");r.classList.add("hours"),i.textContent="Hours";for(let n in h){const e=document.createElement("li");e.textContent=n+" : "+h[n],c.appendChild(e)}r.appendChild(i),r.appendChild(c);const s=document.createElement("div"),l=document.createElement("h3"),A=document.createElement("p");s.classList.add("location"),l.textContent="Location",A.textContent="123 Tiger St, New York, NY 10003",s.appendChild(l),s.appendChild(A),n.appendChild(e),n.appendChild(t),n.appendChild(r),n.appendChild(s)};var C=t(661),g=t(61),b=t(202);const v=document.querySelector("#content"),x={baechu:["baechu",60,"The classic, traditional kimchi made with napa cabbage. Complements any type of food.     Perfect ingredient to make jjigae (stew) or bokkeum (stir-fry).",C],chonggak:["chonggak",65,"A radish kimchi that has a fresh taste with a crunchy texture.     Goes especially well with noodle dishs like ramen and kalguksu (noodle soup) and meat-based soups.",g],pa:["pa",75,"A kimchi made with green onion (owner's personal favorite!). A heavens match with pork dishes,     especially samgyeopsal (pork belly roast). Great as a snack to go with makgeolli (milky sparkling rice wine)",b]};class I{constructor(n,e,t,o){this.ingredient=n,this.header=n[0].toUpperCase()+n.slice(1)+" Kimchi",this.price="$"+e.toString()+"/gal",this.info=t,this.imgSrc=o}createMenu(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),o=document.createElement("h3"),a=document.createElement("p"),r=document.createElement("p"),i=new Image;n.classList.add("menu"),e.classList.add("menu-left"),t.classList.add("menu-top-left"),o.textContent=this.ingredient[0].toUpperCase()+this.ingredient.slice(1)+" Kimchi",a.textContent=this.price,r.textContent=this.info,i.src=this.imgSrc,t.appendChild(o),t.appendChild(a),e.appendChild(t),e.appendChild(r),n.appendChild(e),n.appendChild(i),v.appendChild(n)}}let B="home";const y=document.querySelector("#content");function k(){for(;y.firstChild;)y.removeChild(y.lastChild)}(function(){const n=document.querySelector("body"),e=document.createElement("div");e.classList.add("tabs");const t=["home","menu","contact"];for(let n=0;n<t.length;n++){const o=t[n],a=document.createElement("button");a.setAttribute("id",o+"-tab"),a.textContent=o.charAt(0).toUpperCase()+o.slice(1),e.appendChild(a)}n.appendChild(e)})(),f(),document.querySelectorAll("button").forEach((n=>{n.addEventListener("click",(e=>{const t=n.id.split("-")[0];t!=B&&("home"==t?(B="home",k(),f()):"menu"==t?(B="menu",k(),function(){const n=document.createElement("h1");n.textContent="Menu",v.appendChild(n);for(let n in x)new I(x[n][0],x[n][1],x[n][2],x[n][3]).createMenu()}()):"contact"==t&&(B="contact",k(),contact()))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,